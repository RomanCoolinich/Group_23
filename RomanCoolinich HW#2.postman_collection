{
	"info": {
		"_postman_id": "2126e46c-1f8e-46aa-9395-2d7af657984e",
		"name": "Postman HW#2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1-12 (user_info_3)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp_data = pm.response.json();\r",
							"var req_data = request.data;\r",
							"\r",
							"pm.test(\"Your name Roman?\", function () {\r",
							"pm.expect(resp_data.name).to.eql('Roman');\r",
							"});\r",
							"\r",
							"pm.test(\"Your age 29?\", function () {\r",
							"pm.expect(resp_data.age).to.eql('29');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Your salary 400?\", function () {\r",
							"pm.expect(resp_data.salary).to.eql(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Your request name = response name?\", function () {\r",
							"pm.expect(req_data.name).to.eql(resp_data.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Your request age = response age?\", function () {\r",
							"pm.expect(req_data.age).to.eql(resp_data.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Your request salary = response salary?\", function () {\r",
							"pm.expect(parseInt(req_data.salary)).to.eql(+resp_data.salary);\r",
							"});\r",
							"\r",
							"console.log(resp_data.family);\r",
							"\r",
							"pm.test(\"Does response u_salary_1_5_year = salary*4 request?\", function () {\r",
							"pm.expect(resp_data.family.u_salary_1_5_year).to.eql((req_data.salary)*4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Roman",
							"type": "text"
						},
						{
							"key": "age",
							"value": "29",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "400",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "1-12 (object_info_3)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp_data = pm.response.json();\r",
							"var req_data = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Does response name = request name?\", function(){\r",
							"pm.expect(resp_data.name).to.eql(req_data.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Does response age = request age?\", function(){\r",
							"pm.expect(resp_data.age).to.eql(req_data.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Does response salary = request salary?\", function(){\r",
							"pm.expect(resp_data.salary).to.eql(+req_data.salary);\r",
							"});\r",
							"\r",
							"console.log(resp_data.family);\r",
							"\r",
							"pm.test(\"Does dog have name paremeter?\", function(){\r",
							"pm.expect(resp_data.family.pets.dog.name).exist;\r",
							"})\r",
							"\r",
							"pm.test(\"Does dog have age paremeter?\", function(){\r",
							"pm.expect(resp_data.family.pets.dog.age).exist;\r",
							"})\r",
							"\r",
							"pm.test(\"Does dog have name luky?\", function(){\r",
							"pm.expect(resp_data.family.pets.dog.name).to.eql('Luky');\r",
							"})\r",
							"\r",
							"pm.test(\"Does dog age is 4?\", function(){\r",
							"pm.expect(resp_data.family.pets.dog.age).to.eql(4);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Roman&age=29&salary=400",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Roman"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "salary",
							"value": "400"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "1-21 (object_info_4)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp_data = pm.response.json();\r",
							"var req_data = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Your response name = request name?\", function () {\r",
							"pm.expect(resp_data.name).to.eql(req_data.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Your response age = request age?\", function () { \r",
							"pm.expect(resp_data.age).to.eql(+req_data.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Show request salary in console\", function () { \r",
							"console.log('Request salary='+ req_data.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Show response salary in console log?\", function () {  \r",
							"console.log('Response salary = '+ resp_data.salary)\r",
							"});\r",
							"\r",
							"pm.test(\"Show response salary[0] in console log?\", function () {  \r",
							"console.log('Response salary[0] = '+ resp_data.salary[0])\r",
							"});\r",
							"\r",
							"pm.test(\"Show response salary[1] in console log?\", function () {  \r",
							"console.log('Response salary[1] = '+ resp_data.salary[1])\r",
							"});\r",
							"\r",
							"pm.test(\"Show response salary[2] in console log?\", function () {  \r",
							"console.log('Response salary[2] = '+ resp_data.salary[2])\r",
							"});\r",
							"\r",
							"pm.test(\"Your response salary[0]= request salary?\", function () {  \r",
							"pm.expect(resp_data.salary[0]).to.eql(+req_data.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Your response salary[1] = request salary x 2?\", function () {\r",
							"pm.expect(+resp_data.salary[1]).to.eql(req_data.salary * 2);\r",
							"});\r",
							"\r",
							"pm.test(\"Your response salary[2] = request salary x 3?\", function () {\r",
							"pm.expect(+resp_data.salary[2]).to.eql(req_data.salary * 3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\",resp_data.name);\r",
							"pm.environment.set(\"age\",resp_data.age);\r",
							"pm.environment.set(\"salary\",resp_data.salary[0]);\r",
							"\r",
							"\r",
							"for(let key in resp_data.salary){\r",
							"console.log('salary['+key+']'+\" = \" +resp_data.salary[key])\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Roman&age=29&salary=400",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Roman"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "salary",
							"value": "400"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "1-22 (user_info_2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp_data=pm.response.json();\r",
							"var req_data=request.data;\r",
							"\r",
							"pm.test(\"Status code is 200?\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Does start_qa_salary exist?\", function () {\r",
							"pm.expect(resp_data.start_qa_salary).exist;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Does qa_salary_after_6_months exist?\", function () {\r",
							"pm.expect(resp_data.qa_salary_after_6_months).exist;\r",
							"});\r",
							"\r",
							"pm.test(\"Does qa_salary_after_12_months exist?\", function () {\r",
							"pm.expect(resp_data.qa_salary_after_12_months).exist;\r",
							"});\r",
							"\r",
							"pm.test(\"Does qa_salary_after_1.5_year exist?\", function () {\r",
							"pm.expect(resp_data['qa_salary_after_1.5_year']).exist;\r",
							"});\r",
							"\r",
							"pm.test(\"Does qa_salary_after_3.5_years exist?\", function () {\r",
							"pm.expect(resp_data['qa_salary_after_3.5_years']).exist;\r",
							"});\r",
							"\r",
							"pm.test(\"Does person exist?\", function () {\r",
							"pm.expect(resp_data.person).exist;\r",
							"});\r",
							"\r",
							"pm.test(\"start_qa_salary=salary?\", function () {\r",
							"pm.expect(resp_data.start_qa_salary).to.eql(+req_data.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months=salary*2?\", function () {\r",
							"pm.expect(resp_data.qa_salary_after_6_months).to.eql(+req_data.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months равен salary=salary*2.7?\", function () {\r",
							"pm.expect(resp_data.qa_salary_after_12_months).to.eql(+req_data.salary*2.7);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year=salary*3.3?\", function () {\r",
							"pm.expect(resp_data['qa_salary_after_1.5_year']).to.eql(+req_data.salary*3.3);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years=salary*3.8?\", function () {\r",
							"pm.expect(resp_data['qa_salary_after_3.5_years']).to.eql(+req_data.salary*3.8);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"response person.u_name[1]=salary?\", function () {\r",
							"pm.expect(resp_data.person.u_name[1]).to.eql(+req_data.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"response person.u_age=age?\", function () {\r",
							"pm.expect(resp_data.person.u_age).to.eql(+req_data.age);\r",
							"});\r",
							"\r",
							"pm.test(\"u_salary_5_years=salary*4.2?\", function () {\r",
							"pm.expect(resp_data.person.u_salary_5_years).to.eql(req_data.salary*4.2);\r",
							"});\r",
							"\r",
							"\r",
							"for(let key in resp_data.person){\r",
							"console.log(key+\":\" +resp_data.person[key])\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		},
		{
			"name": "1-3 (first)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		}
	]
}