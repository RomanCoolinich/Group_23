{
	"info": {
		"_postman_id": "639da77e-b4a0-486a-aecd-9951b82e2ef5",
		"name": "Postman HW#3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Сохранение токена в переменную окружения \"token\"\r",
							"pm.environment.set(\"token\", pm.response.json().token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Roman",
							"type": "text"
						},
						{
							"key": "password",
							"value": "123",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/login",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Проверка статус кода 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Записываем ответ в переменную\r",
							"let resp_data=pm.response.json();\r",
							"// Записываем запрос в перменную\r",
							"let req_data=JSON.parse(pm.request.body.raw);\r",
							"//         Проверка структуры json в ответе\r",
							"//Схема ответа\r",
							"var schema= {\r",
							"\"type\": \"object\", \"properties\": {\r",
							"  \"person\": { \"type\": \"object\",\r",
							"    \"properties\":{\r",
							"        \"u_age\": { \"type\": \"integer\"},\r",
							"        \"u_name\": { \"type\": \"array\",\"items\": [\r",
							"            \t\t{\"type\": \"string\"},\r",
							"            \t\t{\"type\": \"integer\"},\r",
							"                    {\"type\": \"integer\"}\r",
							"                                             ]\r",
							"                              },\r",
							"         \"u_salary_1_5_year\": {\"type\": \"integer\"}},\r",
							"                  },\r",
							"    \"qa_salary_after_12_months\": {\"type\": \"number\"},\r",
							"    \"qa_salary_after_6_months\": {\"type\": \"integer\"},\r",
							"    \"start_qa_salary\": {\"type\": \"integer\"}}  \r",
							"}\r",
							"//      Проверяем структуру полученного ответа со схемой\r",
							"pm.test('Проверка структуры полученного ответа со схемой', function () {\r",
							"    pm.expect(tv4.validate(resp_data, schema)).to.be.true;});\r",
							"//         Проверка значения qa_salary_after_6_months\r",
							"pm.test('qa_salary_after_6_months=salary*2?', function(){\r",
							"    pm.expect(resp_data.qa_salary_after_6_months).to.eql(req_data.salary*2);\r",
							"})\r",
							"//        Проверка значения qa_salary_after_12_months\r",
							"pm.test(\"qa_salary_after_12_months=salary*2.9?\", function(){\r",
							"    pm.expect(resp_data.qa_salary_after_12_months).to.eql(req_data.salary*2.9);\r",
							"})\r",
							"\r",
							"//        Проверка значения u_salary_1.5_year=salaty*4\r",
							"\r",
							"pm.test(\"u_salary_1.5_year=salary * 4?\", function(){\r",
							"    pm.expect(resp_data.person.u_salary_1_5_year).to.eql(req_data.salary*4);\r",
							"})\r",
							"//Сохранение значение переменной u_salary_1.5_year в переменную окружения \"salary15\"\r",
							"pm.environment.set(\"salary15\", resp_data.person.u_salary_1_5_year);\r",
							"pm.environment.set(\"age15\", resp_data.person.u_age);\r",
							"pm.environment.set(\"name15\", resp_data.person.u_name[0]);\r",
							"\r",
							"pm.sendRequest({\r",
							"    url:'http://162.55.220.72:5005/get_test_user',\r",
							"    method: 'POST',\r",
							"    header: {\"Content-Type\": \"multipart/form-data\" },\r",
							"    body: { mode: 'formdata', \r",
							"    formdata: [\r",
							"    {key: \"age\", value: pm.environment.get(\"age15\"), disabled: false},\r",
							"    {key: \"salary\", value: pm.environment.get(\"salary15\"), disabled: false},\r",
							"    {key: \"name\", value: pm.environment.get(\"name15\"), disabled: false},\r",
							"    {key: \"auth_token\", value: pm.environment.get(\"token\"), disabled: false}\r",
							"    ]}\r",
							"    }, function (err, response) {\r",
							"    console.log(response.json());\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"age\": 29,\r\n\"salary\": 400,\r\n\"name\": \"Roman\",\r\n\"auth_token\": \"{{token}}\"    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let resp_data=pm.response.json();\r",
							"// Проверка правильности коэфициентов перемножения salary\r",
							"pm.test(\"Проверка правильности коэфициентов перемножения salary\", function(){\r",
							"for(let key in resp_data.salary){\r",
							"pm.expect(+resp_data.salary[key]).to.eql(resp_data.salary[0]*(+[key]+1))}\r",
							"})\r",
							"\r",
							"//Проверка, что 2-й элемент массива salary больше 1-го и 0-го\r",
							"pm.test('Проверка salary[2]>salary[1] и salary[0]', function(){\r",
							"pm.expect(+resp_data.salary[2]).to.be.above(+resp_data.salary[1]) \r",
							"&& pm.expect(+resp_data.salary[2]).to.be.above(+resp_data.salary[0]) ;\r",
							"\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "29",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "400",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Roman",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/new_data",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp_data=pm.response.json();\r",
							"let req_data=request.data;\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Проверка структуры json в ответе\r",
							"var schema={\"type\": \"object\", \"properties\": {\r",
							"        \"age\": { \"type\": \"integer\"},\r",
							"        \"daily_food\": { \"type\": \"number\"},\r",
							"        \"daily_sleep\": { \"type\": \"number\"},           \r",
							"        \"name\": { \"type\": \"string\"}        }\r",
							"           }\r",
							"//      Проверяем структуру полученного ответа со схемой\r",
							"pm.test('Проверка структуры полученного ответа со схемой', function () {\r",
							"    pm.expect(tv4.validate(resp_data, schema)).to.be.true;});\r",
							"\r",
							"// Проверка правильности расчета daily_food\r",
							"pm.test(\"Проверка правильности расчета daily_food\", function(){\r",
							"    pm.expect(resp_data.daily_food).to.eql(req_data.weight*0.012)\r",
							"})\r",
							"\r",
							"// Проверка правильности расчета daily_food\r",
							"pm.test(\"Проверка правильности расчета daily_sleep\", function(){\r",
							"    pm.expect(resp_data.daily_sleep).to.eql(req_data.weight*2.5)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "29",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "92",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Roman",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/test_pet_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"resp_data=pm.response.json()\r",
							"req_data=request.data;\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Проверка структуры json в ответе\r",
							"var schema= {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\"type\": \"string\"},\r",
							"    \"family\": {\"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"children\": {\"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\"type\": \"array\",\r",
							"              \"items\": [\r",
							"                {\"type\": \"string\"},\r",
							"                {\"type\": \"integer\"}\r",
							"                       ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": [\r",
							"                {\"type\": \"string\"},\r",
							"                {\"type\": \"integer\"}\r",
							"                       ]\r",
							"            }\r",
							"                    ]\r",
							"                    },\r",
							"        \"u_salary_1_5_year\": {\"type\": \"integer\"}\r",
							"                    },\r",
							"              },\r",
							"    \"name\": {\"type\": \"string\"},\r",
							"    \"salary\": {\"type\": \"integer\"}\r",
							"                },\r",
							"            }\r",
							"pm.test('Проверка структуры полученного ответа со схемой', function () {\r",
							"    pm.expect(tv4.validate(resp_data, schema)).to.be.true;});\r",
							"\r",
							"// Проверка, что response и request name одинаковы\r",
							"pm.test(\"Проверка, что response и name из окружения одинаковы\", function(){\r",
							"pm.expect(pm.environment.get(\"name15\")).to.eql(resp_data.name) \r",
							"})\r",
							"\r",
							"// Проверка, что response и request age одинаковы\r",
							"pm.test(\"Проверка, что response age из окружения одинаковы\", function(){\r",
							"pm.expect(pm.environment.get(\"age15\")).to.eql(+resp_data.age) \r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "29",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary15}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Roman",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp_data=pm.response.json()\r",
							"//Функция рандомного целого числа в заданных пределах\r",
							"function getRandomInt(min, max) {\r",
							"  min = Math.ceil(min);\r",
							"  max = Math.floor(max);\r",
							"  return Math.floor(Math.random() * (max - min)) + min; \r",
							"//Максимум не включается, минимум включается\r",
							"}\r",
							"pm.environment.set(\"Cur_ID\", resp_data[getRandomInt(1,304)].Cur_ID);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/currency",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp_data=pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверка структуры json в ответе\r",
							"var schema={\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"Cur_Abbreviation\": {\"type\": \"string\"},\r",
							"    \"Cur_ID\": {\"type\": \"integer\"},\r",
							"    \"Cur_Name\": {\"type\": \"string\"},\r",
							"    \"Cur_OfficialRate\": {\"type\": \"number\"},\r",
							"    \"Cur_Scale\": {\"type\": \"integer\"},\r",
							"    \"Date\": {\"type\": \"string\"}\r",
							"  }\r",
							"  }\r",
							"  pm.test('Проверка структуры полученного ответа со схемой', function () {\r",
							"    pm.expect(tv4.validate(resp_data,schema)).to.be.true;});\r",
							"    "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "{{Cur_ID}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/curr_byn",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		},
		{
			"name": "***",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp_data=pm.response.json()\r",
							"let names[];\r",
							"for (let key in resp_data) {\r",
							"names{key}=resp_data[key].Cur_Name;\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/currency",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"currency"
					]
				}
			},
			"response": []
		}
	]
}